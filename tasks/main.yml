---

- name: Clear platform variables
  ansible.builtin.set_fact:
    __defaults_vars: {}
    __defaults_file: "{{ role_path }}/defaults/defaults-{{ inventory_hostname }}-{{ role_name }}.yml"

- name: Create list of all platform default files
  ansible.builtin.set_fact:
    var_list: "{{ lookup('fileglob', 'defaults/*', wantlist=True) | regex_replace(role_path + '/') }}"

- name: Load defaults based on OS type
  ansible.builtin.set_fact:
    # __defaults_vars: "{{ __defaults_vars | combine((lookup('template', item, errors='ignore') | from_yaml)) }}"
    __defaults_vars: "{{ __defaults_vars | combine((lookup('file', item, errors='ignore') | from_yaml)) }}"
  loop:
    - "defaults/main.yml"
    - "defaults/defaults.yml"
    - "defaults/family-{{ ansible_os_family }}.yml"
    - "defaults/family-{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml"
    - "defaults/{{ ansible_distribution }}.yml"
    - "defaults/{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
  when: item in var_list

- name: Write defaults to file
  ansible.builtin.copy:
    dest: "{{ __defaults_file }}"
    content: "{{ __defaults_vars | to_nice_yaml }}"
    mode: "0644"
  become: false
  changed_when: false
  delegate_to: localhost

- name: Execute role again using selected defaults
  ansible.builtin.include_role:
    name: "{{ role_name }}"
    defaults_from: "{{ __defaults_file }}"
    tasks_from: "main1.yml"

- name: Delete temporary defaults
  ansible.builtin.file:
    path: "{{ __defaults_file }}"
    state: absent
  changed_when: false
  delegate_to: localhost
